# Makefile generated by imake - do not edit!
# $TOG: imake.c /main/97 1997/06/20 20:23:51 kaleb $

# ----------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $TOG: Imake.tmpl /main/245 1997/05/20 10:05:47 kaleb $
#

all::

.SUFFIXES: .i

# $TOG: Imake.cf /main/28 1997/06/25 08:31:36 barstow $

# -----------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def /main/revisionist/4 1996/12/31 08:02:07 kaleb $

# ----------------------------------------------------------------------
# platform-specific configuration parameters - edit sun.cf to change

# platform:  $TOG: sun.cf /main/163 1997/06/08 20:08:23 kaleb $

# operating system:  SunOS (4.1.3)

# $XConsortium: sunLib.rules /main/15 1996/09/28 16:13:16 rws $

# ----------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def /main/revisionist/4 1996/12/31 08:02:07 kaleb $

# ---------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $TOG: Imake.rules /main/220 1997/06/05 18:05:16 kaleb $

          PATHSEP = /
            SHELL = /bin/sh

              TOP = .
      CURRENT_DIR = .

            IMAKE = imake
           DEPEND = makedepend
        MKDIRHIER = mkdirhier
    EXPORTLISTGEN = exportlistgen
        CONFIGSRC = $(TOP)/config
         IMAKESRC = $(CONFIGSRC)/imake
        DEPENDSRC = $(CONFIGSRC)/makedepend

          INCROOT = /usr/include
        USRLIBDIR = /usr/lib
         SHLIBDIR = /usr/lib
       LINTLIBDIR = $(USRLIBDIR)/lint
          MANPATH = /usr/man
    MANSOURCEPATH = $(MANPATH)/man
           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
       FILEMANDIR = $(MANSOURCEPATH)$(FILEMANSUFFIX)

               AR = ar clq
  BOOTSTRAPCFLAGS =
               CC = gcc -fpcc-struct-return
               AS = as

         COMPRESS = compress
          GZIPCMD = gzip
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -fpcc-struct-return -E $(STD_CPP_DEFINES)
          INSTALL = install
     INSTALLFLAGS = -c
               LD = ld
              LEX = lex
           LEXLIB = -ll
             YACC = yacc
           CCYACC = yacc
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
        MANSUFFIX = n
     LIBMANSUFFIX = 3
    FILEMANSUFFIX = 5
            TROFF = psroff
            NROFF = nroff
         MSMACROS = -ms
        MANMACROS = -man
              TBL = tbl
              EQN = eqn
             NEQN = neqn
              COL = col

            DVIPS = dvips
            LATEX = latex

     STD_INCLUDES =
  STD_CPP_DEFINES =  $(PROJECT_DEFINES)
      STD_DEFINES =  $(PROJECT_DEFINES)
 EXTRA_LOAD_FLAGS =
  EXTRA_LDOPTIONS =
  EXTRA_LIBRARIES =
             TAGS = ctags

    SHAREDCODEDEF = -DSHAREDCODE
         SHLIBDEF = -DSUNSHLIB

     SHLIBLDFLAGS = -assert pure-text

         PICFLAGS = -fpic

      CXXPICFLAGS = -pic

    PROTO_DEFINES =

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4711
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -g kmem -m 2711

      CDEBUGFLAGS = -O2
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(THREADS_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(THREADS_CFLAGS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES) $(DEPEND_DEFINES)
         LDPRELIB =
        LDPOSTLIB =
        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS)  $(EXTRA_LDOPTIONS) $(THREADS_LDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIBS)
     CXXLDOPTIONS = $(CXXDEBUGFLAGS) $(CXXOPTIONS) $(EXTRA_LDOPTIONS) $(THREADS_CXXLDFLAGS) $(LOCAL_LDFLAGS) $(LDPRELIBS)

           LDLIBS = $(LDPOSTLIBS) $(THREADS_LIBS) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

           CCLINK = $(CC)

          CXXLINK = $(CXX)

     LDSTRIPFLAGS = -x
   LDCOMBINEFLAGS = -X -r
      DEPENDFLAGS =

        MACROFILE = sun.cf
           RM_CMD = $(RM)

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/X11.tmpl \
			$(IRULESRC)/site.def $(IRULESRC)/$(MACROFILE) \
			 $(EXTRA_ICONFIGFILES)

# $TOG: X11.rules /main/4 1997/04/30 15:23:24 kaleb $

# ----------------------------------------------------------------------
# X Window System Build Parameters and Rules
# $TOG: X11.tmpl /main/292 1997/05/20 10:05:59 kaleb $

# -----------------------------------------------------------------------
# X Window System make variables; these need to be coordinated with rules

             XTOP = $(TOP)
           BINDIR = /usr/bin/X11
     BUILDINCROOT = $(TOP)/exports
      BUILDINCDIR = $(BUILDINCROOT)/include
      BUILDINCTOP = ../..
      BUILDLIBDIR = $(TOP)/exports/lib
      BUILDLIBTOP = ../..
      BUILDBINDIR = $(TOP)/exports/bin
      BUILDBINTOP = ../..
    XBUILDINCROOT = $(XTOP)/exports
     XBUILDINCDIR = $(XBUILDINCROOT)/include/X11
     XBUILDINCTOP = ../../..
     XBUILDBINDIR = $(XBUILDINCROOT)/bin
           INCDIR = $(INCROOT)
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11
   TOP_X_INCLUDES = -I$(XPROJECTROOT)/include

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
           XSMDIR = $(LIBDIR)/xsm
           NLSDIR = $(LIBDIR)/nls
       XLOCALEDIR = $(LIBDIR)/locale
        PEXAPIDIR = $(LIBDIR)/PEX
      LBXPROXYDIR = $(LIBDIR)/lbxproxy
  PROXYMANAGERDIR = $(LIBDIR)/proxymngr
        XPRINTDIR = $(LIBDIR)
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

              RGB = rgb
            FONTC = bdftopcf
        MKFONTDIR = mkfontdir

       DOCUTILSRC = $(XTOP)/doc/util
       XDOCMACROS = $(DOCUTILSRC)/macros.t
       XIDXMACROS = $(DOCUTILSRC)/indexmacros.t
       PROGRAMSRC = $(TOP)/programs
           LIBSRC = $(XTOP)/lib
          FONTSRC = $(XTOP)/fonts
       INCLUDESRC = $(BUILDINCROOT)/include
      XINCLUDESRC = $(INCLUDESRC)/X11
        SERVERSRC = $(XTOP)/programs/Xserver
       CONTRIBSRC = $(XTOP)/../contrib
   UNSUPPORTEDSRC = $(XTOP)/unsupported
           DOCSRC = $(XTOP)/doc
           RGBSRC = $(XTOP)/programs/rgb
      BDFTOPCFSRC = $(PROGRAMSRC)/bdftopcf
     MKFONTDIRSRC = $(PROGRAMSRC)/mkfontdir
    FONTSERVERSRC = $(PROGRAMSRC)/xfs
       FONTINCSRC = $(XTOP)/include/fonts
        EXTINCSRC = $(XTOP)/include/extensions
     TRANSCOMMSRC = $(LIBSRC)/xtrans
   TRANS_INCLUDES = -I$(TRANSCOMMSRC)

       XENVLIBDIR = $(USRLIBDIR)
   CLIENTENVSETUP = LD_LIBRARY_PATH=$(XENVLIBDIR)

# $TOG: sunLib.tmpl /main/45 1997/02/13 13:52:59 kaleb $

          XLIBSRC = $(LIBSRC)/X11

SOXLIBREV = 4.30
DEPXONLYLIB =
XONLYLIB =  -lX11

LINTXONLY = $(LINTLIBDIR)/llib-lX11.ln

         XLIBONLY = $(XONLYLIB)

      XEXTLIBSRC = $(LIBSRC)/Xext

SOXEXTREV = 4.40
DEPEXTENSIONLIB =
EXTENSIONLIB =  -lXext

LINTEXTENSION = $(LINTLIBDIR)/llib-lXext.ln

LINTEXTENSIONLIB = $(LINTEXTENSION)
          DEPXLIB = $(DEPEXTENSIONLIB) $(DEPXONLYLIB)
             XLIB = $(EXTENSIONLIB) $(XONLYLIB)
         LINTXLIB = $(LINTXONLYLIB)

         XAUTHSRC = $(LIBSRC)/Xau

DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
XAUTHLIB =  -lXau

LINTXAUTH = $(LINTLIBDIR)/llib-lXau.ln

      XDMCPLIBSRC = $(LIBSRC)/Xdmcp

DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
XDMCPLIB =  -lXdmcp

LINTXDMCP = $(LINTLIBDIR)/llib-lXdmcp.ln

           XMUSRC = $(LIBSRC)/Xmu

SOXMUREV = 4.20
DEPXMULIB = $(USRLIBDIR)/libXmu.sa.$(SOXMUREV)
XMULIB =  -lXmu

LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln

       OLDXLIBSRC = $(LIBSRC)/oldX

SOOLDXREV = 4.20
DEPOLDXLIB =
OLDXLIB =  -loldX

LINTOLDX = $(LINTLIBDIR)/llib-loldX.ln

         XPLIBSRC = $(LIBSRC)/Xp

SOXPREV = 6.2
DEPXPLIB =
XPLIB =  -lXp

LINTXP = $(LINTLIBDIR)/llib-lXp.ln

       TOOLKITSRC = $(LIBSRC)/Xt

SOXTREV = 4.20
DEPXTOOLONLYLIB = $(USRLIBDIR)/libXt.sa.$(SOXTREV)
XTOOLONLYLIB =  -lXt

LINTXTOOLONLY = $(LINTLIBDIR)/llib-lXt.ln

      DEPXTOOLLIB = $(DEPXTOOLONLYLIB) $(DEPSMLIB) $(DEPICELIB)
         XTOOLLIB = $(XTOOLONLYLIB) $(SMLIB) $(ICELIB)
     LINTXTOOLLIB = $(LINTXTOOLONLYLIB)

       XALIBSRC = $(LIBSRC)/Xa

DEPXALIB = $(USRLIBDIR)/libXa.a
XALIB =  -lXa

LINTXA = $(LINTLIBDIR)/llib-lXa.ln

       AWIDGETSRC = $(LIBSRC)/Xaw

SOXAWREV = 6.10
DEPXAWLIB = $(USRLIBDIR)/libXaw.sa.$(SOXAWREV)
XAWLIB =  -lXaw

LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln

         XILIBSRC = $(LIBSRC)/Xi

SOXINPUTREV = 4.20
DEPXILIB =
XILIB =  -lXi

LINTXI = $(LINTLIBDIR)/llib-lXi.ln

      XTESTLIBSRC = $(LIBSRC)/Xtst

SOXTESTREV = 1.20
DEPXTESTLIB =
XTESTLIB =  -lXtst

LINTXTEST = $(LINTLIBDIR)/llib-lXtst.ln

        PEXLIBSRC = $(LIBSRC)/PEX5

SOPEXREV = 1.10
DEPPEXLIB =
PEXLIB =  -lPEX5

LINTPEX = $(LINTLIBDIR)/llib-lPEX5.ln

        XIELIBSRC = $(LIBSRC)/XIE

SOXIEREV = 6.0
DEPXIELIB =
XIELIB =  -lXIE

LINTXIE = $(LINTLIBDIR)/llib-lXIE.ln

      PHIGSLIBSRC = $(LIBSRC)/PHIGS

DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
PHIGSLIB =  -lphigs

LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
XBSDLIB =  -lXbsd

LINTXBSD = $(LINTLIBDIR)/llib-lXbsd.ln

           ICESRC = $(LIBSRC)/ICE

SOICEREV = 6.3
DEPICELIB =
ICELIB =  -lICE

LINTICE = $(LINTLIBDIR)/llib-lICE.ln

            SMSRC = $(LIBSRC)/SM

SOSMREV = 6.0
DEPSMLIB =
SMLIB =  -lSM

LINTSM = $(LINTLIBDIR)/llib-lSM.ln

           XKEYSRC = $(LIBSRC)/Xkey

SOXKEYREV = 6.0
DEPXKEYLIB =
XKEYLIB =  -lXkey

LINTXKEY = $(LINTLIBDIR)/llib-lXkey.ln

         FSLIBSRC = $(LIBSRC)/FS

DEPFSLIB = $(USRLIBDIR)/libFS.a
FSLIB =  -lFS

LINTFS = $(LINTLIBDIR)/llib-lFS.ln

         FONTLIBSRC = $(LIBSRC)/font

DEPFONTLIB = $(USRLIBDIR)/libfont.a
FONTLIB =  -lfont

LINTFONT = $(LINTLIBDIR)/llib-lfont.ln

    XKBFILELIBSRC = $(LIBSRC)/xkbfile

DEPXKBFILELIB = $(USRLIBDIR)/libxkbfile.a
XKBFILELIB =  -lxkbfile

LINTXKBFILE = $(LINTLIBDIR)/llib-lxkbfile.ln

     XKBCOMPCMD = xkbcomp

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)
         DEPLIBS4 = $(DEPLIBS)
         DEPLIBS5 = $(DEPLIBS)
         DEPLIBS6 = $(DEPLIBS)
         DEPLIBS7 = $(DEPLIBS)
         DEPLIBS8 = $(DEPLIBS)
         DEPLIBS9 = $(DEPLIBS)
         DEPLIBS10 = $(DEPLIBS)

        CONFIGDIR = $(LIBDIR)/config

    USRLIBDIRPATH = $(USRLIBDIR)
        LDPRELIBS =
       LDPOSTLIBS =
     TOP_INCLUDES =  $(TOP_X_INCLUDES)
  PROJECT_DEFINES =

# ----------------------------------------------------------------------
# start of Imakefile

# FIG : Facility for Interactive Generation of figures
# Copyright (c) 1985-1988 by Supoj Sutanthavibul
# Parts Copyright (c) 1989-2000 by Brian V. Smith
# Parts Copyright (c) 1991 by Paul King
#
# Any party obtaining a copy of these files is granted, free of charge, a
# full and unrestricted irrevocable, world-wide, paid up, royalty-free,
# nonexclusive right and license to deal in this software and
# documentation files (the "Software"), including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons who receive
# copies from any such party to do so, with the only requirement being
# that this copyright notice remain intact.

# If you want to install xfig in a directory other than the default X11 binary
# directory, uncomment the following "BINDIR" line and change the path
# to the full path of the directory where you want xfig to be installed.
# Also, you may have to uncomment and redefine MKDIRHIER because "make" looks
# for it relative to the BINDIR variable.
#
# Finally, uncomment and change XAPPLOADDIR to the directory where you want the
# app-defaults resource files to go.  You will have to use the environment
# variable XAPPLRESDIR to point to this directory.

# BINDIR = /usr/bin/X11
# MKDIRHIER = /bin/sh /usr/bin/X11/mkdirhier
# XAPPLOADDIR = /home/user/xfig

# If don't want JPEG support, comment out the #define USEJPEG line
# Uncomment the #define for USEJPEG if you want to be able to import
# JPEG (Joint Photographic Experts Group) files.

# If you don't have the jpeg library in your system library area (meaning
# that it must be compiled first), comment out the USEINSTALLEDJPEG variable
# (using #), change the JPEGLIBDIR variable to the directory where your
# jpeg library resides and change the JPEGINCDIR to the directory where your
# jpeg header files (include) reside.
# You must have version 5b or newer of the jpeg library.

JPEGLIBDIR = /usr/local/lib
JPEGINCDIR = /usr/include/X11

# Comment out the following #define USEPNG if you don't want PNG support
# Uncomment the #define for USEPNG if you want to be able to import
# PNG (Portable Network Graphics) files.

# Uncomment the #define for USEXPM if you want to use the XPM
# (color pixmap) package.
#
# USEXPM will allow import/export of XPM files.
# USEXPM_ICON uses a color xpm icon for xfig itself (USEXPM must be
#	defined if you use USEXPM_ICON)
# You need XPM version 3.4c or newer.  This is available from ftp.x.org
#   in /contrib/libraries.
# Change XPMLIBDIR if necessary to point to the xpm library (libXpm)
# Change XPMINC if necessary to point to the include file for xpm (xpm.h)

XPMLIBDIR = $(USRLIBDIR)
XPMINC = -I/usr/include/X11

# Uncomment the following definiton if you want to use the small icons
# for the panel buttons.  Use this if you have a 800x600 or smaller screen.

# #define USESMALLICONS

# Uncomment the following definition for XAW3D if you want to use
# the 3d Athena Widget Set (highly recommended!)
# Then be sure to change the XAW3DINC to point to the directory where your
# 3D Athena widget headers are located

XAW3DINC = -I/usr/include/X11/Xaw3d
DUSEXAW3D = -DXAW3D
XAWLIB = -lXaw3d

# Change the location of your printcap file if necessary
PRINTCAP = -DPRINTCAP=\"/etc/printcap\"

# Uncomment the following if needed for DECstations running older X11R4
# INCROOT=/usr/include/mit

# If you do not want to use the CompKeyDB but the standard behavior of
# the Compose key, uncomment the next line

# NO_COMPKEYDB = -DNO_COMPKEYDB

# If you have a Compose indicator LED and you would it turned on when you
# are entering multi-key characters (like a-umlaut, c-cedilla, etc)
# uncomment the next line.  You may have to change the value from 2
# to 1, 3, or 4 depending on your workstation model and X libraries.

COMP_LED = -DCOMP_LED=3

# Uncomment the next line if you want use Japanese (i18n) on xfig.
# If your setlocale() dosen't support the locale, you should
# add -DSETLOCALE to I18N_DEFS.

# #define I18N

# If using an input tablet uncomment the following

TABLIB = $(XILIB)
USETAB = -DUSE_TAB

# uncomment the following line if your compiler supports
# inline functions. With the "INLINE" keyword, you should notice that
# the display will be a bit faster in complex figures

# USEINLINE = -DUSE_INLINE

# use (and change) the following if you want the multi-key data base file
# somewhere other than the standard X11 library directory
# be sure to comment out the second copy of XFIGLIBDIR if you use this one
# XFIGLIBDIR = /usr/local/lib/xfig

# use this if you want the multi-key data base file in the standard X11 tree
XFIGLIBDIR = $(LIBDIR)/xfig

# now you can configure where the documentation should be located
XFIGDOCDIR = $(LIBDIR)/xfig
# XFIGDOCDIR = /usr/share/doc/xfig-doc

# If your system doesn't have strstr undefine the following definition
# HAVE_NO_NOSTRSTR = -DNOSTRSTR

# If your system doesn't have strcasecmp and/or strncasecmp
# undefine the following two definitions

# HAVE_NO_STRCASECMP = -DHAVE_NO_STRCASECMP
# HAVE_NO_STRNCASECMP = -DHAVE_NO_STRNCASECMP

# If your system has the strerror() function (doesn't have sys_errlist) then
# comment out NEED_STRERROR with an # comment.

# NEED_STRERROR = -DNEED_STRERROR

# If your system doesn't have dirent.h undefine the following definition

# HAVE_NO_DIRENT = -DHAVE_NO_DIRENT

# For the rotated text code:
#   Add one of `-DCACHE_XIMAGES' or `-DCACHE_BITMAPS' to decide what is
#   cached.  If you are concerned about memory usage in your X server (e.g.
#   if you are using an X terminal) then you might want to cache Ximages,
#   which reside on the client-side.  On the other hand it is much slower,
#   so you might want to cache bitmaps (which reside in the X server)
#   instead.
#   Add `-DCACHE_SIZE_LIMIT=xxxx' where xxxx is the cache size in kilobytes.
#   A cache size of zero turns caching off.

CACHE = -DCACHE_BITMAPS -DCACHE_SIZE_LIMIT=300

# For SYSV systems with BSD-style printer command which use lpr instead of
# lp (SGI is one such machine), add -DBSDLPR to the DEFINES variable
#
# If you have VERY large objects (e.g. polylines etc) you may want to
# increase MAXNUMPTS, the maximum number of points that are displayed. The
# default can be found in w_drawprim.h.  This option may be specified by
# adding -DMAXNUMPTS=xxxx to the DEFINES line, where xxxx is the maximum
# number of vertices.

# Additionally, there is a bug in the pcx driver in Aladdin Ghostscript
# versions prior to 3.32, which writes an incorrect pcx file for images
# with odd width (not even).  Uncomment the following compile-time flag
# PCXBUG to make xfig add one pixel to the width of an odd-width image
# it reads in the pcx output from Ghostscript.
# If you have Aladdin Ghostscript 3.32 or newer (which wasn't released
# as of this writing) you may leave it commented out and your images will
# have the proper width.  However, one pixel extra in width shouldn't
# matter for most imported eps files.

# PCXBUG = -DPCXBUG

# If you want a compiler other than "cc", define it here

# CC = /opt/SUNWspro/bin/cc

# *****************************************************
# *****************************************************
# You shouldn't have to change anything below this line
# *****************************************************
# *****************************************************

JPEGINC = -I$(JPEGINCDIR)

JPEGLIB = -L$(JPEGLIBDIR) -ljpeg

DIR_DEFS=		-DXFIGLIBDIR=\"$(XFIGLIBDIR)\" \
			-DXFIGDOCDIR=\"$(XFIGDOCDIR)\" $(PRINTCAP)

# location of Fig object libraries
OBJLIBDIR =		$(XFIGLIBDIR)/Libraries
OBJLIB =		-DOBJLIBDIR=\"$(OBJLIBDIR)\"

STRDEFINES = $(HAVE_NO_NOSTRSTR) \
		$(HAVE_NO_STRNCASECMP) \
		$(HAVE_NO_STRCASECMP) \
		$(NEED_STRERROR)

DUSEJPEG = -DUSE_JPEG
READJPEGS = f_readjpg.c
READJPEGO = f_readjpg.o

DUSEPNG = -DUSE_PNG
PNGLIBS = -lpng -lz
READPNGS = f_readpng.c
READPNGO = f_readpng.o

DUSEXPM = -DUSE_XPM
XPMLIBS = -L$(XPMLIBDIR) -lXpm
READXPMS = f_readxpm.c
READXPMO = f_readxpm.o

DUSEXPMICON = -DUSE_XPM_ICON

DEFINES =             $(STRDEFINES) $(USEINLINE) $(DUSEXPM) $(DUSEXAW3D) \
			$(DUSEJPEG) $(DUSEPNG) $(I18N_DEFS) \
			$(HAVE_NO_DIRENT)

XFIGSRC =	d_arc.c d_arcbox.c d_box.c d_ellipse.c d_picobj.c \
		d_subspline.c d_line.c d_regpoly.c d_spline.c d_text.c \
		e_addpt.c e_align.c e_arrow.c e_break.c e_compound.c \
		e_convert.c e_copy.c e_delete.c e_deletept.c \
		e_edit.c e_flip.c e_glue.c e_joinsplit.c e_move.c \
		e_movept.c e_placelib.c e_rotate.c e_scale.c e_update.c \
		f_load.c f_neuclrtab.c f_picobj.c f_read.c f_readold.c \
		f_readppm.c f_readtif.c f_readeps.c \
		f_readxbm.c f_readgif.c $(READJPEGS) f_readpcx.c $(READXPMS) $(READPNGS) \
		f_save.c f_util.c f_wrpcx.c \
		main.c mode.c object.c resources.c \
		u_bound.c u_create.c u_drag.c u_draw.c \
		u_elastic.c u_error.c u_fonts.c u_free.c u_geom.c \
		u_list.c u_markers.c u_pan.c u_print.c \
		u_redraw.c u_scale.c u_search.c u_translate.c u_undo.c w_listwidget.c \
		w_browse.c w_capture.c w_srchrepl.c w_help.c w_layers.c w_menuentry.c \
		w_canvas.c w_cmdpanel.c w_color.c w_cursor.c w_dir.c w_drawprim.c \
		w_export.c w_file.c w_fontbits.c w_fontpanel.c w_grid.c w_icons.c \
		w_indpanel.c w_library.c w_modepanel.c w_mousefun.c w_msgpanel.c \
		w_print.c w_rottext.c w_rulers.c w_setup.c w_util.c w_zoom.c \
		$(I18N_SRC) SmeCascade.c

XFIGOBJ =	d_arc.o d_arcbox.o d_box.o d_ellipse.o d_picobj.o \
		d_subspline.o d_line.o d_regpoly.o d_spline.o d_text.o \
		e_addpt.o e_align.o e_arrow.o e_break.o e_compound.o \
		e_convert.o e_copy.o e_delete.o e_deletept.o \
		e_edit.o e_flip.o e_glue.o e_joinsplit.o e_move.o \
		e_movept.o e_placelib.o e_rotate.o e_scale.o e_update.o \
		f_load.o f_neuclrtab.o f_picobj.o f_read.o f_readold.o \
		f_readppm.o f_readtif.o f_readeps.o \
		f_readxbm.o f_readgif.o $(READJPEGO) f_readpcx.o $(READXPMO) $(READPNGO) \
		f_save.o f_util.o f_wrpcx.o \
		main.o mode.o object.o resources.o \
		u_bound.o u_create.o u_drag.o u_draw.o \
		u_elastic.o u_error.o u_fonts.o u_free.o u_geom.o \
		u_list.o u_markers.o u_pan.o u_print.o \
		u_redraw.o u_scale.o u_search.o u_translate.o u_undo.o w_listwidget.o \
		w_browse.o w_capture.o w_srchrepl.o w_help.o w_layers.o w_menuentry.o \
		w_canvas.o w_cmdpanel.o w_color.o w_cursor.o w_dir.o w_drawprim.o \
		w_export.o w_file.o w_fontbits.o w_fontpanel.o w_grid.o w_icons.o \
		w_indpanel.o w_library.o w_modepanel.o w_mousefun.o w_msgpanel.o \
		w_print.o w_rottext.o w_rulers.o w_setup.o w_util.o w_zoom.o \
		$(I18N_OBJ) SmeCascade.o

# Other dependencies should be handled by "make depend"

MAINDEPFILES =  patchlevel.h version.h

SRCS = $(XFIGSRC)
OBJS = $(XFIGOBJ)

EXTRA_INCLUDES = $(JPEGINC) $(XPMINC) $(XAW3DINC)
DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

LOCAL_LIBRARIES = 	$(JPEGLIB)
SYS_LIBRARIES= 		$(XPMLIBS) $(PNGLIBS) $(TABLIB) $(XAWLIB) $(XMULIB) $(XTOOLLIB) $(XLIB) -lm

xfig: $(DEPLIBJPEG)

# only compile our jpeg if the user doesn't have one installed

PROGRAM = xfig

all:: xfig

 PROGRAM = xfig

all:: xfig

xfig: $(OBJS) $(DEPLIBS)
	$(RM) $@
	$(CCLINK) -o $@ $(LDOPTIONS) $(OBJS) $(LOCAL_LIBRARIES) $(LDLIBS)  $(EXTRA_LOAD_FLAGS)

install:: xfig
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTPGMFLAGS)  xfig $(DESTDIR)$(BINDIR)/xfig

install.man:: Doc/xfig.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTMANFLAGS) Doc/xfig.man $(DESTDIR)$(MANDIR)/xfig.$(MANSUFFIX)

depend::
	$(DEPEND) $(DEPENDFLAGS) -- $(ALLDEFINES) $(DEPEND_DEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

clean::
	$(RM) xfig

install:: Fig.ad
	@if [ -d $(DESTDIR)$(XAPPLOADDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(XAPPLOADDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTAPPFLAGS) Fig.ad $(DESTDIR)$(XAPPLOADDIR)/Fig

install:: Fig-color.ad
	@if [ -d $(DESTDIR)$(XAPPLOADDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(XAPPLOADDIR)); fi
	$(INSTALL) $(INSTALLFLAGS) $(INSTAPPFLAGS) Fig-color.ad $(DESTDIR)$(XAPPLOADDIR)/Fig-color

# Install the compose key database and object libraries
# here with "make install"

install::
	@if [ -d $(DESTDIR)$(XFIGLIBDIR) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(DESTDIR)$(XFIGLIBDIR) ; set +x; ); fi
	chmod a+x,u+w $(DESTDIR)$(XFIGLIBDIR)
	$(INSTALL) -m 644 -c CompKeyDB $(DESTDIR)$(XFIGLIBDIR)

# Install program, libraries and documentation with "make install.all"
install.all::
	$(MAKE) install.libs
	$(MAKE) install.doc

# Install the documentation here with "make install.doc"
install.doc::
	@echo Installing man pages to $(DESTDIR)$(MANDIR)
	@$(MAKE) install.man
	@$(MAKE) install.html

# Install the HTML documentation here with "make install.html"
install.html::

	@(cd Doc ; \
	echo Copying pdf and html files to $(DESTDIR)$(XFIGDOCDIR) ; \
	$(INSTALL) -m 644 -c xfig.html $(DESTDIR)$(XFIGDOCDIR) ; \
	$(INSTALL) -m 644 -c xfig-howto.pdf $(DESTDIR)$(XFIGDOCDIR) ; \
	if [ -d $(DESTDIR)$(XFIGDOCDIR)/html ]; then set +x; \
	   else (set -x; $(MKDIRHIER) $(DESTDIR)$(XFIGDOCDIR)/html ); fi ; \
	(cd html ; \
	   for f in *.* ; do \
	      $(INSTALL) -m 644 -c $$f $(DESTDIR)$(XFIGDOCDIR)/html ; \
	   done) ; \
	echo "  Copying image files for html" ; \
	if [ -d $(DESTDIR)$(XFIGDOCDIR)/html/images ]; then set +x; \
	   else (set -x; $(MKDIRHIER) $(DESTDIR)$(XFIGDOCDIR)/html/images ); fi ; \
	(cd html/images ; \
	   for f in * ; do \
	       $(INSTALL) -m 644 -c $$f $(DESTDIR)$(XFIGDOCDIR)/html/images ; \
	   done) ; \
	) ;

# Install the object libraries here with "make install.libs"
install.libs::
	@echo "Copying Fig Object Libraries"
	@if [ -d $(DESTDIR)$(OBJLIBDIR) ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(DESTDIR)$(OBJLIBDIR) ; set +x; ); fi
	@if [ -d Examples/Libraries ]; then \
	(cd Examples/Libraries ; \
	for d in * ;  do \
	    (cd $$d ; \
	    if [ -d $(DESTDIR)$(OBJLIBDIR)/$$d ]; then set +x; \
		else (set -x; $(MKDIRHIER) $(DESTDIR)$(OBJLIBDIR)/$$d ); fi ; \
	    echo "  Copying $$d library files to $(DESTDIR)$(OBJLIBDIR)/$$d" ; \
	    for f in * ;  do \
		if [ -d $$f ]; then ( \
		    if [ -d $(DESTDIR)$(OBJLIBDIR)/$$d/$$f ]; then set +x; \
			else (set -x; $(MKDIRHIER) $(DESTDIR)$(OBJLIBDIR)/$$d/$$f ); fi ; \
			(cd $$f ; \
			for dd in * ; do \
			    if [ -d $$dd ]; then ( \
				if [ -d $(DESTDIR)$(OBJLIBDIR)/$$d/$$f/$$dd ]; then set +x; \
				    else (set -x; $(MKDIRHIER) $(DESTDIR)$(OBJLIBDIR)/$$d/$$f/$$dd ); fi ; \
				    (cd $$dd ; \
				    for l in * ; do \
					if [ -d $$l ]; then ( \
					    if [ -d $(DESTDIR)$(OBJLIBDIR)/$$d/$$f/$$dd/$$l ]; then set +x; \
						else (set -x; $(MKDIRHIER) $(DESTDIR)$(OBJLIBDIR)/$$d/$$f/$$dd/$$l ); fi ; \
					    (cd $$l ; \
						for m in * ; do \
						    $(INSTALL) -m 644 -c $$m $(DESTDIR)$(OBJLIBDIR)/$$d/$$f/$$dd/$$l ; \
						done ) ) ; \
					else ( $(INSTALL) -m 644 -c $$l $(DESTDIR)$(OBJLIBDIR)/$$d/$$f/$$dd ) ; fi ; \
				done) ) ; \
			    else ( $(INSTALL) -m 644 -c $$dd $(DESTDIR)$(OBJLIBDIR)/$$d/$$f ) ; fi ; \
			done) ); \
		else ($(INSTALL) -m 644 -c $$f $(DESTDIR)$(OBJLIBDIR)/$$d ) ; fi ; \
	    done ) ; \
	done ; ) ; \
	else echo No Object Libraries to install ; \
	fi;

main.o:  main.c $(MAINDEPFILES) mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)  $(USETAB) $(OBJLIB) $(DUSEXPMICON)  $*.c

f_read.o:  f_read.c $(MAINDEPFILES) mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

u_error.o:  u_error.c $(MAINDEPFILES) mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)    $*.c

resources.o:  resources.c resources.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)    $*.c

e_edit.o:  e_edit.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

f_readeps.o:  f_readeps.c
	$(RM) $@
	 $(CC) -c $(CFLAGS)  $(PCXBUG) -DGSBIT  $*.c

w_capture.o:  w_capture.c  w_capture.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_help.o:  w_help.c
	$(RM) $@
	 $(CC) -c $(CFLAGS)  $(DIR_DEFS)  $*.c

w_canvas.o:  w_canvas.c mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)  $(DIR_DEFS) $(COMP_LED) $(NO_COMPKEYDB)  $*.c

w_icons.o:  w_icons.c w_icons.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)  $(DUSESMALLICONS) $(DUSEXPMICON)  $*.c

w_print.o:  w_print.c w_print.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)  $(DIR_DEFS)  $*.c

w_setup.o:  w_setup.c w_setup.h w_icons.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)  $(DUSESMALLICONS)  $*.c

w_rottext.o:  w_rottext.c
	$(RM) $@
	 $(CC) -c $(CFLAGS)  $(CACHE)  $*.c

d_arc.o:  d_arc.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

d_arcbox.o:  d_arcbox.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

d_box.o:  d_box.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

d_ellipse.o:  d_ellipse.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

d_line.o:  d_line.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

d_picobj.o:  d_picobj.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

d_regpoly.o:  d_regpoly.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

d_spline.o:  d_spline.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

d_text.o:  d_text.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_addpt.o:  e_addpt.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_align.o:  e_align.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_arrow.o:  e_arrow.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_break.o:  e_break.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_compound.o:  e_compound.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_convert.o:  e_convert.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_copy.o:  e_copy.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_delete.o:  e_delete.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_deletept.o:  e_deletept.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_flip.o:  e_flip.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_glue.o:  e_glue.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_movept.o:  e_movept.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_placelib.o:  e_placelib.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_rotate.o:  e_rotate.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_scale.o:  e_scale.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

e_update.o:  e_update.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

f_load.o:  f_load.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

f_picobj.o:  f_picobj.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

f_save.o:  f_save.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

f_util.o:  f_util.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

mode.o:  mode.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

object.o:  object.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

u_bound.o:  u_bound.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

u_create.o:  u_create.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

u_drag.o:  u_drag.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

u_elastic.o:  u_elastic.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

u_list.o:  u_list.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

u_markers.o:  u_markers.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

u_pan.o:  u_pan.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

u_print.o:  u_print.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

u_search.o:  u_search.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

u_undo.o:  u_undo.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_browse.o:  w_browse.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_cmdpanel.o:  w_cmdpanel.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_color.o:  w_color.c  mode.h w_indpanel.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_dir.o:  w_dir.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_drawprim.o:  w_drawprim.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_export.o:  w_export.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_file.o:  w_file.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_grid.o:  w_grid.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_indpanel.o:  w_indpanel.c  mode.h w_indpanel.h object.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_library.o:  w_library.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_menuentry.o:  w_menuentry.c  w_menuentry.h w_menuentryP.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_modepanel.o:  w_modepanel.c  mode.h w_icons.h object.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)  $(DUSESMALLICONS) $*.c

w_msgpanel.o:  w_msgpanel.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_rulers.o:  w_rulers.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

w_zoom.o:  w_zoom.c  mode.h
	$(RM) $@
	 $(CC) -c $(CFLAGS)   $*.c

# ----------------------------------------------------------------------
# common rules for all Makefiles - do not edit

.c.i:
	$(RM) $@
	 $(CC) -E $(CFLAGS) $(_NOOP_) $*.c > $@

emptyrule::

clean::
	$(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut  "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

man_keywords::
	catman -M $(DESTDIR)$(MANPATH) -w

# ----------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

install.linkkit::
	@echo "install.linkkit in $(CURRENT_DIR) done"

Makefiles::

includes::

depend::

# ----------------------------------------------------------------------
# dependencies generated by makedepend


# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $
#
# The cpp used on this machine replaces all newlines and multiple tabs and
# spaces in a macro expansion with a single space.  Imake tries to compensate
# for this, but is not always successful.
#

# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
#
# Platform-specific parameters may be set in the appropriate <vendor>.cf
# configuration files.  Site-specific parameters should be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make World" the first time).
#

# -------------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit sun.cf to change

# platform:  $XConsortium: sun.cf,v 1.72.1.1 92/03/18 13:13:37 rws Exp $

# operating system:  SunOS 4.1.2

# $XConsortium: sunLib.rules,v 1.7 91/12/20 11:19:47 rws Exp $

.c.o:
	$(CC) -c $(CFLAGS) $*.c

# -------------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

            SHELL = /bin/sh

              TOP = .
      CURRENT_DIR = .

               AR = ar clq
  BOOTSTRAPCFLAGS =
               CC = gcc -fstrength-reduce -fpcc-struct-return
               AS = as

         COMPRESS = compress
              CPP = /lib/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -fstrength-reduce -fpcc-struct-return -E $(STD_CPP_DEFINES)
          INSTALL = install
               LD = ld
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
     STD_INCLUDES =
  STD_CPP_DEFINES =
      STD_DEFINES =
 EXTRA_LOAD_FLAGS = -B/usr/bin/
  EXTRA_LIBRARIES =
             TAGS = ctags

    SHAREDCODEDEF = -DSHAREDCODE
         SHLIBDEF = -DSUNSHLIB

    PROTO_DEFINES =

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -g kmem -m 2755

      CDEBUGFLAGS = -O
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)

           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS)

   LDCOMBINEFLAGS = -X -r
      DEPENDFLAGS =

        MACROFILE = sun.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules \
			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def \
			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

# -------------------------------------------------------------------------
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.138 91/09/10 09:02:12 rws Exp $

# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules

          PATHSEP = /
        USRLIBDIR = /usr/lib
           BINDIR = /usr/bin/X11
          INCROOT = /usr/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
          MANPATH = /usr/man
    MANSOURCEPATH = $(MANPATH)/man
        MANSUFFIX = l
     LIBMANSUFFIX = 3
           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
           NLSDIR = $(LIBDIR)/nls
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = imake
           DEPEND = makedepend
              RGB = rgb

            FONTC = bdftopcf

        MKFONTDIR = mkfontdir
        MKDIRHIER = /bin/sh $(BINDIR)/mkdirhier

        CONFIGSRC = $(TOP)/config
       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
         FSLIBSRC = $(FONTSRC)/lib/fs
    FONTSERVERSRC = $(FONTSRC)/server
     EXTENSIONSRC = $(TOP)/extensions
         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX

# $XConsortium: sunLib.tmpl,v 1.14.1.1 92/03/17 14:58:46 rws Exp $

SHLIBLDFLAGS = -assert pure-text
PICFLAGS = -pic

  DEPEXTENSIONLIB =
     EXTENSIONLIB = -lXext

          DEPXLIB = $(DEPEXTENSIONLIB)
             XLIB = $(EXTENSIONLIB) -lX11

        DEPXMULIB = $(USRLIBDIR)/libXmu.sa.$(SOXMUREV)
       XMULIBONLY = -lXmu
           XMULIB = -lXmu

       DEPOLDXLIB =
          OLDXLIB = -loldX

      DEPXTOOLLIB = $(USRLIBDIR)/libXt.sa.$(SOXTREV)
         XTOOLLIB = -lXt

        DEPXAWLIB = $(USRLIBDIR)/libXaw.sa.$(SOXAWREV)
           XAWLIB = -lXaw

        DEPXILIB =
           XILIB = -lXi

        SOXLIBREV = 4.10
          SOXTREV = 4.10
         SOXAWREV = 5.0
        SOOLDXREV = 4.10
         SOXMUREV = 4.10
        SOXEXTREV = 4.10
      SOXINPUTREV = 4.10

      DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
         XAUTHLIB =  -lXau
      DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
         XDMCPLIB =  -lXdmcp

        DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
           PHIGSLIB =  -lphigs

       DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
          XBSDLIB =  -lXbsd

 LINTEXTENSIONLIB = $(LINTLIBDIR)/llib-lXext.ln
         LINTXLIB = $(LINTLIBDIR)/llib-lX11.ln
          LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln
        LINTXTOOL = $(LINTLIBDIR)/llib-lXt.ln
          LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln
           LINTXI = $(LINTLIBDIR)/llib-lXi.ln
        LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.123 91/09/16 20:12:16 rws Exp $

# -------------------------------------------------------------------------
# start of Imakefile

# FIG : Facility for Interactive Generation of figures
# Copyright (c) 1985-1988 by Supoj Sutanthavibul
# Parts Copyright (c) 1989-1998 by Brian V. Smith
# Parts Copyright (c) 1991 by Paul King
#
# Any party obtaining a copy of these files is granted, free of charge, a
# full and unrestricted irrevocable, world-wide, paid up, royalty-free,
# nonexclusive right and license to deal in this software and
# documentation files (the "Software"), including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons who receive
# copies from any such party to do so, with the only requirement being
# that this copyright notice remain intact.
#
# Restriction: The GIF encoding routine "GIFencode" in f_wrgif.c may NOT
# be included if xfig is to be sold, due to the patent held by Unisys Corp.
# on the LZW compression algorithm.
# If you wish to sell xfig, you must comment out the USEGIF symbol below
# by putting the word "XCOMM" in front of it.  Be sure to make a new
# Makefile after that ("make Makefile").

# If don't want to use JPEG, comment out the following line

# If you don't have the jpeg library in your system library area, comment
# out the USEINSTALLEDJPEG variable (using #), change the JPEGLIBDIR
# variable to the directory where your jpeg library resides and change
# the JPEGINCDIR to the directory where your jpeg header files (include)
# reside.
# You must have version 5b or newer of the jpeg library.

JPEGLIBDIR = /usr/local/lib

# Uncomment the following definiton if you want to use the small icons
# for the panel buttons.  Use this if you have a 800x600 or smaller screen.

# #define USESMALLICONS

# Uncomment the following definition for XAWLIB if you want to use
# the 3d Athena Widget Set (highly recommended!)

# XAWLIB = -lXaw3d

# Uncomment the following if needed for DECstations running older X11R4
# INCROOT=/usr/include/mit

# Uncomment the #define for USEXPM if you want to use the XPM
# (color pixmap) package.
#
# USEXPM will allow import/export of XPM files.
# USEXPM_ICON uses a color xpm icon for xfig itself (USEXPM must be
#	defined if you use USEXPM_ICON)
# You need XPM version 3.4c or newer.  This is available from ftp.x.org
#   in /contrib/libraries.
# Change XPMLIBS if necessary to point to the xpm library (libXpm)
# Change XPMINC if necessary to point to the include file for xpm (xpm.h)

# #define USEXPM
# #define USEXPM_ICON

# Uncomment the next line if you have a Sun Sparc and you would like the
# Compose LED (light) turned on when you are entering multi-key characters
# (like a-umlaut, c-cedilla, etc).  You may have to change the value from 2
# to 1, 3, or 4 depending on your workstation model and X libraries.

# COMP_LED = -DCOMP_LED=2

# Uncomment the next line if you want use Japanese (i18n) on xfig.
# If your setlocale() dosen't support the locale, you should
# add -DSETLOCALE to I18N_DEFS.

# #define I18N

# If using an input tablet uncomment the following

# TABLIB = $(XILIB)
# USETAB = -DUSE_TAB

# uncomment the following line if your compiler supports
# inline functions. With the "INLINE" keyword, you should notice that
# the display will be a bit faster in complex figures

# USEINLINE = -DUSE_INLINE

# use (and change) the following if you want the multi-key data base file
# somewhere other than the standard X11 library directory
# XFIGLIBDIR = /usr/local/lib/X11/xfig

# use this if you want the multi-key data base file in the standard X11 tree
XFIGLIBDIR = $(LIBDIR)/xfig

# If your system doesn't have strstr undefine the following definition
# HAVE_NO_NOSTRSTR = -DNOSTRSTR

# If your system doesn't have strcasecmp and/or strncasecmp
# undefine the following two definitions

# HAVE_NO_STRCASECMP = -DHAVE_NO_STRCASECMP
# HAVE_NO_STRNCASECMP = -DHAVE_NO_STRNCASECMP

# For the rotated text code:
#   Add one of `-DCACHE_XIMAGES' or `-DCACHE_BITMAPS' to decide what is
#   cached.  If you are concerned about memory usage in your X server (e.g.
#   if you are using an X terminal) then you might want to cache Ximages,
#   which reside on the client-side.  On the other hand it is much slower,
#   so you might want to cache bitmaps (which reside in the X server)
#   instead.
#   Add `-DCACHE_SIZE_LIMIT=xxxx' where xxxx is the cache size in kilobytes.
#   A cache size of zero turns caching off.

CACHE = -DCACHE_BITMAPS -DCACHE_SIZE_LIMIT=300

# For SYSV systems with BSD-style printer command which use lpr instead of
# lp (SGI is one such machine), add -DBSDLPR to the DEFINES variable
#
# If you have VERY large objects (e.g. polylines etc) you may want to
# increase MAXNUMPTS, the maximum number of points that are displayed. The
# default can be found in w_drawprim.h.  This option may be specified by
# adding -DMAXNUMPTS=xxxx to the DEFINES line, where xxxx is the maximum
# number of vertices.

# remove -DGSBIT from the DEFINES if you DON'T want to have gs (Ghostscript)
# generate a preview bitmap for Encapsulated PostScript objects if they
# don't have one.  If you do use Ghostscript you will need version 2.4 or
# later, and it must have the 'pcx256' and 'pbmraw' devices compiled in
# besides any other device drivers you already use with it.
# See the Ghostscript Makefile for details.

# Additionally, there is a bug in the pcx driver in Aladdin Ghostscript
# versions prior to 3.32, which writes an incorrect pcx file for images
# with odd width (not even).  Uncomment the following compile-time flag
# PCXBUG to make xfig add one pixel to the width of an odd-width image
# it reads in the pcx output from Ghostscript.
# If you have Aladdin Ghostscript 3.32 or newer (which wasn't released
# as of this writing) you may leave it commented out and your images will
# have the proper width.  However, one pixel extra in width shouldn't
# matter for most imported eps files.

# PCXBUG = -DPCXBUG

# *****************************************************
# *****************************************************
# You shouldn't have to change anything below this line
# *****************************************************
# *****************************************************

JPEGINCDIR = -I/usr/include/X11
JPEGLIB = -L$(JPEGLIBDIR) -ljpeg

DIR_DEFS=		-DXFIGLIBDIR=\"$(XFIGLIBDIR)\"

# location of Fig object libraries
OBJLIBDIR =		$(XFIGLIBDIR)/Libraries
OBJLIB =		-DOBJLIBDIR=\"$(OBJLIBDIR)\"

STRDEFINES = $(HAVE_NO_NOSTRSTR) \
		$(HAVE_NO_STRNCASECMP) \
		$(HAVE_NO_STRCASECMP)

DUSEGIF = -DUSE_GIF
WRGIFS = f_wrgif.c
WRGIFO = f_wrgif.o

DUSEJPEG = -DUSE_JPEG
READJPEGS = f_readjpg.c
READJPEGO = f_readjpg.o

DEFINES =             $(STRDEFINES) -DGSBIT $(USEINLINE) $(DUSEXPM) \
			$(DUSEXPMICON) $(DUSEGIF) $(DUSEJPEG) $(I18N_DEFS)

XFIGSRC =	d_arc.c d_arcbox.c d_box.c d_ellipse.c d_picobj.c \
		d_subspline.c d_line.c d_regpoly.c d_spline.c d_text.c \
		e_addpt.c e_align.c e_arrow.c e_break.c e_compound.c \
		e_convert.c e_copy.c e_delete.c e_deletept.c \
		e_edit.c e_flip.c e_glue.c e_move.c \
		e_movept.c e_placelib.c e_rotate.c e_scale.c e_update.c \
		f_load.c f_neuclrtab.c f_picobj.c f_read.c f_readold.c \
		f_readeps.c f_readxbm.c f_readgif.c $(READJPEGS) f_readpcx.c $(READXPMS) \
		f_save.c f_util.c f_wrpcx.c $(WRGIFS) \
		main.c mode.c object.c resources.c \
		u_bound.c u_create.c u_drag.c u_draw.c \
		u_elastic.c u_error.c u_fonts.c u_free.c u_geom.c \
		u_list.c u_markers.c u_pan.c u_print.c \
		u_redraw.c u_scale.c u_search.c u_translate.c u_undo.c \
		w_browse.c w_capture.c w_srchrepl.c w_help.c \
		w_canvas.c w_cmdpanel.c w_color.c w_cursor.c w_dir.c w_drawprim.c \
		w_export.c w_file.c w_fontbits.c w_fontpanel.c w_grid.c w_icons.c \
		w_indpanel.c w_library.c w_modepanel.c w_mousefun.c w_msgpanel.c \
		w_print.c w_rottext.c w_rulers.c w_setup.c w_util.c w_zoom.c \
		$(I18N_SRC)

XFIGOBJ =	d_arc.o d_arcbox.o d_box.o d_ellipse.o d_picobj.o \
		d_subspline.o d_line.o d_regpoly.o d_spline.o d_text.o \
		e_addpt.o e_align.o e_arrow.o e_break.o e_compound.o \
		e_convert.o e_copy.o e_delete.o e_deletept.o \
		e_edit.o e_flip.o e_glue.o e_move.o \
		e_movept.o e_placelib.o e_rotate.o e_scale.o e_update.o \
		f_load.o f_neuclrtab.o f_picobj.o f_read.o f_readold.o \
		f_readeps.o f_readxbm.o f_readgif.o $(READJPEGO) f_readpcx.o $(READXPMO) \
		f_save.o f_util.o f_wrpcx.o $(WRGIFO) \
		main.o mode.o object.o resources.o \
		u_bound.o u_create.o u_drag.o u_draw.o \
		u_elastic.o u_error.o u_fonts.o u_free.o u_geom.o \
		u_list.o u_markers.o u_pan.o u_print.o \
		u_redraw.o u_scale.o u_search.o u_translate.o u_undo.o \
		w_browse.o w_capture.o w_srchrepl.o w_help.o \
		w_canvas.o w_cmdpanel.o w_color.o w_cursor.o w_dir.o w_drawprim.o \
		w_export.o w_file.o w_fontbits.o w_fontpanel.o w_grid.o w_icons.o \
		w_indpanel.o w_library.o w_modepanel.o w_mousefun.o w_msgpanel.o \
		w_print.o w_rottext.o w_rulers.o w_setup.o w_util.o w_zoom.o \
		$(I18N_OBJ)

# Other dependencies should be handled by "make depend"

MAINDEPFILES =  fig.icon.X patchlevel.h version.h

SRCS = $(XFIGSRC)
OBJS = $(XFIGOBJ)

EXTRA_INCLUDES = $(JPEGINCDIR) $(XPMINC)
DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

LOCAL_LIBRARIES = 	$(JPEGLIB)
SYS_LIBRARIES= 		-lm $(XPMLIBS) $(TABLIB) $(XAWLIB) $(XMULIB) $(XTOOLLIB) $(XLIB)

xfig: $(DEPLIBJPEG)

# only compile our jpeg if the use doesn't have one installed

PROGRAM = xfig

all:: xfig

 PROGRAM = xfig

all:: xfig

xfig: $(OBJS) $(DEPLIBS)
	$(RM) $@
	$(CC) -o $@ $(OBJS) $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) $(EXTRA_LOAD_FLAGS)

saber_xfig:: $(SRCS)
	# load $(ALLDEFINES) $(SRCS) $(LOCAL_LIBRARIES) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

osaber_xfig:: $(OBJS)
	# load $(ALLDEFINES) $(OBJS) $(LOCAL_LIBRARIES) $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

install:: xfig
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) -c $(INSTPGMFLAGS)  xfig $(DESTDIR)$(BINDIR)

install.man:: Doc/xfig.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) Doc/xfig.man $(DESTDIR)$(MANDIR)/xfig.$(MANSUFFIX)

depend::
	$(DEPEND) $(DEPENDFLAGS) -s "# DO NOT DELETE" -- $(ALLDEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

clean::
	$(RM) $(PROGRAM)

install::
	@case '${MFLAGS}' in *[i]*) set +e;; esac;
	@for i in $(XFIGLIBDIR) $(OBJLIBDIR); do if [ -d $(DESTDIR)$$i ]; then \
	set +x; else (set -x; $(MKDIRHIER) $(DESTDIR)$$i); fi \
	done

install:: CompKeyDB
	$(INSTALL) -c $(INSTDATFLAGS) CompKeyDB $(DESTDIR)$(XFIGLIBDIR)

install:: Fig.ad
	@if [ -d $(DESTDIR)$(XAPPLOADDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(XAPPLOADDIR)); fi
	$(INSTALL) -c $(INSTAPPFLAGS) Fig.ad $(DESTDIR)$(XAPPLOADDIR)/Fig

install:: Fig-color.ad
	@if [ -d $(DESTDIR)$(XAPPLOADDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(XAPPLOADDIR)); fi
	$(INSTALL) -c $(INSTAPPFLAGS) Fig-color.ad $(DESTDIR)$(XAPPLOADDIR)/Fig-color

# Install the object libraries here
install::
	@echo Copying PDF documentation to $(XFIGLIBDIR)
	@(cd Doc ; \
	$(INSTALL) -c xfig-howto.pdf $(XFIGLIBDIR) ; \
	$(INSTALL) -c xfig.pdf $(XFIGLIBDIR) ; \
	$(INSTALL) -d $(XFIGLIBDIR)/html ; \
	$(INSTALL) -d $(XFIGLIBDIR)/html/japanese ; \
	$(INSTALL) -d $(XFIGLIBDIR)/html/images ; \
	echo Copying html files to $(XFIGLIBDIR)/html ; \
	(cd html ; $(INSTALL) -c *.* $(XFIGLIBDIR)/html ; ) ;\
	echo "  Copying japanese html files" ; \
	(cd html/japanese ; $(INSTALL) -c * $(XFIGLIBDIR)/html/japanese ; ) ; \
	echo "  Copying image files for html" ; \
	(cd html/images ; $(INSTALL) -c * $(XFIGLIBDIR)/html/images ; ) ; \
	) ;
	@echo "Copying Fig Object Libraries"
	@(cd Examples/Libraries ; \
	for d in * ;  do \
	    (cd $$d ; \
	    $(INSTALL) -d $(OBJLIBDIR)/$$d ; \
	    echo "  Copying $$d library files to $(OBJLIBDIR)/$$d" ; \
	    for f in * ;  do \
		if [ -d $$f ]; then ( \
		    echo "    Copying files to $(OBJLIBDIR)/$$d/$$f" ; \
		    $(INSTALL) -d $(OBJLIBDIR)/$$d/$$f ; \
		    cd $$f ; $(INSTALL) -c * $(OBJLIBDIR)/$$d/$$f ); \
	        else ($(INSTALL) -c $$f $(OBJLIBDIR)/$$d ) ; fi ; \
	    done ) ; \
	done ; ) ;

main.o:  main.c $(MAINDEPFILES) mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)  $(USETAB) $(OBJLIB)  $*.c

f_read.o:  f_read.c $(MAINDEPFILES) mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)    $*.c

u_error.o:  u_error.c $(MAINDEPFILES) mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)    $*.c

resources.o:  resources.c resources.h
	$(RM) $@
	$(CC) -c $(CFLAGS)    $*.c

f_readeps.o:  f_readeps.c
	$(RM) $@
	$(CC) -c $(CFLAGS)  $(PCXBUG)  $*.c

w_help.o:  w_help.c
	$(RM) $@
	$(CC) -c $(CFLAGS)  $(DIR_DEFS)  $*.c

w_canvas.o:  w_canvas.c mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)  $(DIR_DEFS) $(COMP_LED)  $*.c

w_icons.o:  w_icons.c w_icons.h
	$(RM) $@
	$(CC) -c $(CFLAGS)  $(DUSESMALLICONS)  $*.c

w_setup.o:  w_setup.c w_setup.h w_icons.h
	$(RM) $@
	$(CC) -c $(CFLAGS)  $(DUSESMALLICONS)  $*.c

w_rottext.o:  w_rottext.c
	$(RM) $@
	$(CC) -c $(CFLAGS)  $(CACHE)  $*.c

d_arc.o:  d_arc.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

d_arcbox.o:  d_arcbox.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

d_box.o:  d_box.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

d_ellipse.o:  d_ellipse.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

d_line.o:  d_line.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

d_picobj.o:  d_picobj.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

d_regpoly.o:  d_regpoly.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

d_spline.o:  d_spline.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

d_text.o:  d_text.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_addpt.o:  e_addpt.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_align.o:  e_align.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_arrow.o:  e_arrow.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_break.o:  e_break.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_compound.o:  e_compound.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_convert.o:  e_convert.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_copy.o:  e_copy.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_delete.o:  e_delete.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_deletept.o:  e_deletept.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_edit.o:  e_edit.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_flip.o:  e_flip.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_glue.o:  e_glue.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_movept.o:  e_movept.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_placelib.o:  e_placelib.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_rotate.o:  e_rotate.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_scale.o:  e_scale.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

e_update.o:  e_update.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

f_load.o:  f_load.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

f_picobj.o:  f_picobj.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

f_save.o:  f_save.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

f_util.o:  f_util.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

mode.o:  mode.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

object.o:  object.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

u_bound.o:  u_bound.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

u_create.o:  u_create.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

u_drag.o:  u_drag.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

u_elastic.o:  u_elastic.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

u_list.o:  u_list.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

u_markers.o:  u_markers.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

u_pan.o:  u_pan.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

u_print.o:  u_print.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

u_search.o:  u_search.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

u_undo.o:  u_undo.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_browse.o:  w_browse.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_cmdpanel.o:  w_cmdpanel.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_color.o:  w_color.c  mode.h w_indpanel.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_dir.o:  w_dir.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_drawprim.o:  w_drawprim.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_export.o:  w_export.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_file.o:  w_file.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_grid.o:  w_grid.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_indpanel.o:  w_indpanel.c  mode.h w_indpanel.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_library.o:  w_library.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_modepanel.o:  w_modepanel.c  mode.h w_icons.h
	$(RM) $@
	$(CC) -c $(CFLAGS)  $(DUSESMALLICONS) $*.c

w_msgpanel.o:  w_msgpanel.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_print.o:  w_print.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_rulers.o:  w_rulers.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

w_zoom.o:  w_zoom.c  mode.h
	$(RM) $@
	$(CC) -c $(CFLAGS)   $*.c

# -------------------------------------------------------------------------
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

saber:
	# load $(ALLDEFINES) $(SRCS)

osaber:
	# load $(ALLDEFINES) $(OBJS)

# -------------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

# -------------------------------------------------------------------------
# dependencies generated by makedepend

